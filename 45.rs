// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
// Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
// Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
// Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...
// 
// It can be verified that T285 = P165 = H143 = 40755.
// 
// Find the next triangle number that is also pentagonal and hexagonal.

fn triangle(n:u128) -> u128 {
    n * (n + 1)/2
}

fn pentagonal(n:u128) -> u128 {
    n * (3*n - 1)/2
}

fn hexagonal(n:u128) -> u128 {
    n * (2*n -1)
}

fn main() {

    println!("{} {} {}", triangle(285), pentagonal(165), hexagonal(143));

    let mut pentagonals = Vec::new();
    let mut hexagonals = Vec::new();

    for i in 1..=285 {
        pentagonals.push(pentagonal(i));
        hexagonals.push(hexagonal(i));
    }


    let mut i = 286;
    loop {
        let num = triangle(i);

        pentagonals.push(pentagonal(i));
        hexagonals.push(hexagonal(i));

        if pentagonals.contains(&num) && hexagonals.contains(&num) {
            println!("num = {}", num);
            break;
        }

        i += 1;
    }
}

